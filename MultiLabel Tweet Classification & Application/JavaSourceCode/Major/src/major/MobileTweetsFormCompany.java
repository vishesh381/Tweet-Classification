package major; 

import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pranav Jain
 */
public class MobileTweetsFormCompany extends javax.swing.JFrame {
String brand1;
    int totalpos1=0,totalneg1=0,totalneu1=0;
            float CameraPolarity1,ServiceAndSupportPolarity1,QuestPolarity1,OtherFeaturesPolarity1,MentionPolarity1;

    /**
     * Creates new form Form
     */
    public MobileTweetsFormCompany(String b1) {
        brand1=b1;
        initComponents();
        //System.out.println(brand1);
        lblTrendingTweetsTopic1.setText(brand1);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStreamTweets = new javax.swing.JButton();
        lblTrendingTweets1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtTrendingTweets1 = new javax.swing.JTextArea();
        lblTrendingTweetsTopic1 = new javax.swing.JTextField();
        Pos1 = new javax.swing.JLabel();
        Neu1 = new javax.swing.JLabel();
        Neg1 = new javax.swing.JLabel();
        Mention1 = new javax.swing.JLabel();
        Features1 = new javax.swing.JLabel();
        Camera1 = new javax.swing.JLabel();
        OtherFeatures1 = new javax.swing.JLabel();
        Inquiry1 = new javax.swing.JLabel();
        Advertisement1 = new javax.swing.JLabel();
        MNeu1 = new javax.swing.JTextField();
        MPos1 = new javax.swing.JTextField();
        MNeg1 = new javax.swing.JTextField();
        OFNeu1 = new javax.swing.JTextField();
        OFNeg1 = new javax.swing.JTextField();
        OFPos1 = new javax.swing.JTextField();
        INeu1 = new javax.swing.JTextField();
        INeg1 = new javax.swing.JTextField();
        IPos1 = new javax.swing.JTextField();
        CPos1 = new javax.swing.JTextField();
        CNeu1 = new javax.swing.JTextField();
        CNeg1 = new javax.swing.JTextField();
        Ad1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        SSPos1 = new javax.swing.JTextField();
        ServiceSupport1 = new javax.swing.JLabel();
        SSNeu1 = new javax.swing.JTextField();
        SSNeg1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStreamTweets.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnStreamTweets.setText("Stream Tweets");
        btnStreamTweets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStreamTweetsActionPerformed(evt);
            }
        });

        lblTrendingTweets1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTrendingTweets1.setText("Trending Tweets:");

        txtTrendingTweets1.setEditable(false);
        txtTrendingTweets1.setColumns(20);
        txtTrendingTweets1.setRows(5);
        jScrollPane4.setViewportView(txtTrendingTweets1);

        lblTrendingTweetsTopic1.setEditable(false);
        lblTrendingTweetsTopic1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblTrendingTweetsTopic1ActionPerformed(evt);
            }
        });

        Pos1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pos1.setText("Positive");

        Neu1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neu1.setText("Neutral");

        Neg1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neg1.setText("Negative");

        Mention1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Mention1.setText("Mention");

        Features1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Features1.setText("Features");

        Camera1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Camera1.setText("Camera");

        OtherFeatures1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OtherFeatures1.setText("Other Features");

        Inquiry1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Inquiry1.setText("Inquiry / Questions");

        Advertisement1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Advertisement1.setText("Advertisements");

        MNeu1.setEditable(false);

        MPos1.setEditable(false);

        MNeg1.setEditable(false);

        OFNeu1.setEditable(false);

        OFNeg1.setEditable(false);

        OFPos1.setEditable(false);

        INeu1.setEditable(false);

        INeg1.setEditable(false);

        IPos1.setEditable(false);

        CPos1.setEditable(false);

        CNeu1.setEditable(false);

        CNeg1.setEditable(false);

        Ad1.setEditable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText(" Generate Results!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        SSPos1.setEditable(false);

        ServiceSupport1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ServiceSupport1.setText("Service and Support");

        SSNeu1.setEditable(false);
        SSNeu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNeu1ActionPerformed(evt);
            }
        });

        SSNeg1.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Vijaya", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 255));
        jLabel4.setText("Tweewomt");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\as\\Documents\\NetBeansProjects\\Major\\images\\bird_blue_48.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btnStreamTweets)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(222, 222, 222)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTrendingTweets1)
                                .addGap(29, 29, 29)
                                .addComponent(lblTrendingTweetsTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(Advertisement1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Mention1)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Features1)
                                                .addGap(42, 42, 42)
                                                .addComponent(Camera1)))
                                        .addGap(111, 111, 111)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Pos1))
                                        .addGap(23, 23, 23))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(85, 85, 85)
                                                .addComponent(OtherFeatures1))
                                            .addComponent(Inquiry1)
                                            .addComponent(ServiceSupport1))
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SSPos1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(IPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(OFPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(INeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(OFNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(SSNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(CNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(MNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(Ad1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(Neu1)
                                        .addGap(67, 67, 67)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Neg1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(MNeg1)
                                        .addComponent(CNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(OFNeg1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SSNeg1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(INeg1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnStreamTweets, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTrendingTweetsTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrendingTweets1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(MPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Mention1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(Camera1)
                                                .addComponent(Features1)))))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(OtherFeatures1)
                                    .addComponent(OFPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ServiceSupport1)
                                    .addComponent(SSPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(IPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Inquiry1)))
                            .addComponent(Pos1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(MNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(45, 45, 45)
                                            .addComponent(CNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(24, 24, 24)
                                    .addComponent(OFNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(23, 23, 23)
                                            .addComponent(SSNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(73, 73, 73)
                                            .addComponent(INeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Neg1)
                                        .addComponent(Neu1))
                                    .addGap(32, 32, 32)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(MNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(45, 45, 45)
                                            .addComponent(CNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(24, 24, 24)
                                    .addComponent(OFNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(23, 23, 23)
                                            .addComponent(SSNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(73, 73, 73)
                                            .addComponent(INeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Advertisement1)
                            .addComponent(Ad1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStreamTweetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStreamTweetsActionPerformed
        // TODO add your handling code here:
    MobileSentimentClassifier sentClassifier;  
    MobileTopicClassifier sentClassifier2; 
    int LIMIT= 500; //the number of retrieved tweets  
    ConfigurationBuilder cb;  
    Twitter twitter;   
        cb = new ConfigurationBuilder();  
        cb.setDebugEnabled(true);
        cb.setOAuthConsumerKey("r3LjcqZLjEkgtniB3MJ2G4wZe");
        cb.setOAuthConsumerSecret("GfQjdjQQQHFA4iWq0pdUCm5279EuZ0aUSLmirjbs7fqTyxsLv8");
        cb.setOAuthAccessToken("3557951474-axOpcM4CeRZqfGYmP7elNE7nZ52rSUHI5Rv6mve");
        cb.setOAuthAccessTokenSecret("N1lBfeKZq78pOTToXxh9EwSGvP92bPGLJRrFAwSvdApXo");  
    twitter = new TwitterFactory(cb.build()).getInstance();  
    sentClassifier = new MobileSentimentClassifier();    
    sentClassifier2 = new MobileTopicClassifier();    
 FileOutputStream fout1=null;  
    try {
        fout1 = new FileOutputStream("DatasetCompany\\Mobile"+brand1+".txt");
    } catch (FileNotFoundException ex) {
        Logger.getLogger(MobileTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout=new BufferedOutputStream(fout1);  
   
    int count=0;
    //int compliments=0,complaints=0,
    int advertisement=0;
    int posOtherFeatures=0,negOtherFeatures=0,neuOtherFeatures=0;
    int posMention=0,negMention=0,neuMention=0;
    //int posBattery=0,negBattery=0,neuBattery=0;
    //int posPrice=0,negPrice=0,neuPrice=0;
    int posServiceAndSupport=0,negServiceAndSupport=0,neuServiceAndSupport=0;
    int posCamera=0,negCamera=0,neuCamera=0;
    int posQuest=0,negQuest=0,neuQuest=0;
    
    
       Query query = new Query(brand1);  
       query.setCount(100); 
       query.setLang("en");
       QueryResult r = null;
       do {
            
        try {
            r = twitter.search(query); //Returns tweets that match a specified query.
            ArrayList ts= (ArrayList) r.getTweets();
            
            for (int i = 0; i < ts.size() && count != LIMIT; i++) {
                
                Status t = (Status) ts.get(i);
                String text = t.getText();
                if(text.toLowerCase().contains("case") || text.toLowerCase().contains("free") || text.toLowerCase().contains("win") || text.toLowerCase().contains("sleeves") || text.toLowerCase().contains("sleeve"))
                {
                    String name = t.getUser().getScreenName();
                    txtTrendingTweets1.append(name + " : " + text + "\n" + "Sentiment: Neutral \n Topic: Advertisement");
                    txtTrendingTweets1.append("\n-----------------------------------------------------------------------------------\n");
                    advertisement++;
                    String s= name + " : " + text + "\n Sentiment: Neutral \n Topic: Advertisement \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(MobileTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    continue;
                }
                count++;
                //System.out.println("Text: " + text);
                String name = t.getUser().getScreenName();
                //System.out.println("User: " + name);
                String sent = sentClassifier.classify(t.getText());
                String topic = sentClassifier2.classify(t.getText());
                //System.out.println("Sentiment: " + sent);
                
                txtTrendingTweets1.append(name + " : " + text + "\n" + "Sentiment:" + sent + "\nTopic:" + topic);
                txtTrendingTweets1.append("\n-----------------------------------------------------------------------------------\n");
                
                 String s= name + " : " + text + "\n Sentiment:" + sent + "\nTopic:" + topic + " \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(MobileTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
                if(sent.equals("Positive") && topic.equals("Mention"))
                    posMention++;
                if(sent.equals("Negative") && topic.equals("Mention"))
                    negMention++;
                if(sent.equals("Neutral") && topic.equals("Mention"))
                    neuMention++;
                
                
                if(sent.equals("Positive") && topic.equals("Camera"))
                    posCamera++;
                if(sent.equals("Negative") && topic.equals("Camera"))
                    negCamera++;
                if(sent.equals("Neutral") && topic.equals("Camera"))
                    neuCamera++;
                
                /*if(sent.equals("Positive") && topic.equals("Battery"))
                    posBattery++;
                if(sent.equals("Negative") && topic.equals("Battery"))
                    negBattery++;
                if(sent.equals("Neutral") && topic.equals("Battery"))
                    neuBattery++;
                
                 if(sent.equals("Positive") && topic.equals("Price"))
                    posPrice++;
                if(sent.equals("Negative") && topic.equals("Price"))
                    negPrice++;
                if(sent.equals("Neutral") && topic.equals("Price"))
                    neuPrice++;
                */
                if(sent.equals("Positive") && topic.equals("ServiceAndSupport"))
                    posServiceAndSupport++;
                if(sent.equals("Negative") && topic.equals("ServiceAndSupport"))
                    negServiceAndSupport++;
                if(sent.equals("Neutral") && topic.equals("ServiceAndSupport"))
                    neuServiceAndSupport++;
                
                  if(sent.equals("Positive") && topic.equals("OtherFeatures"))
                    posOtherFeatures++;
                if(sent.equals("Negative") && topic.equals("OtherFeatures"))
                    negOtherFeatures++;
                if(sent.equals("Neutral") && topic.equals("OtherFeatures"))
                    neuOtherFeatures++;
                
                if(sent.equals("Neutral") && topic.equals("Inquiry"))
                    neuQuest++;
                if(sent.equals("Negative") && topic.equals("Inquiry"))
                    negQuest++;
                if(sent.equals("Positive") && topic.equals("Inquiry"))
                    posQuest++;
                
                
            }
        } catch (TwitterException ex) {
            Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(Level.SEVERE, null, ex);
        }
       } while (count != LIMIT);  
       //nextQuery():Returns a Query instance to fetch next page or null if there is no next page.
    try {
        //nextQuery():Returns a Query instance to fetch next page or null if there is no next page.
        bout.close();
    } catch (IOException ex) {
        Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(Level.SEVERE, null, ex);
    }
    System.out.println("Count: " + count);  
       
        MPos1.setText("=" + posMention);
        MNeg1.setText("=" + negMention);
        MNeu1.setText("=" + neuMention);
        
        CPos1.setText("=" + posCamera);
        CNeg1.setText("=" + negCamera);
        CNeu1.setText("=" + neuCamera);
        
        /*BPos1.setText("=" + posBattery);
        BNeg1.setText("=" + negBattery);
        BNeu1.setText("=" + neuBattery);
       
        PPos1.setText("=" + posPrice);
        PNeg1.setText("=" + negPrice);
        PNeu1.setText("=" + neuPrice);
        */
        SSPos1.setText("=" + posServiceAndSupport);
        SSNeg1.setText("=" + negServiceAndSupport);
        SSNeu1.setText("=" + neuServiceAndSupport);
        
        OFPos1.setText("=" + posOtherFeatures);
        OFNeg1.setText("=" + negOtherFeatures);
        OFNeu1.setText("=" + neuOtherFeatures);
        
        IPos1.setText("=" + posQuest);
        INeg1.setText("=" + negQuest);
        INeu1.setText("=" + neuQuest);
        
        
        Ad1.setText("=" + advertisement);
        
        totalpos1=posServiceAndSupport + posQuest + posOtherFeatures + posCamera + posMention;
        totalneg1=negServiceAndSupport + negQuest + negOtherFeatures + negCamera + negMention;
        totalneu1=neuServiceAndSupport + neuQuest + neuOtherFeatures + neuCamera + neuMention;
        
        FileOutputStream fout2=null;  
    
        try {
        fout2 = new FileOutputStream("DatasetCompany\\Mobile"+brand1+"Sentiments.txt");
    } catch (FileNotFoundException ex) {
        Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout2=new BufferedOutputStream(fout2);  
   
    String s2= " Positive: " + totalpos1 + " \n Negative: " + totalneg1 + " \n Neutral: " + totalneu1 + "\n";
    byte b2[]=s2.getBytes(); 
    try {
        bout2.write(b2);
        bout2.close();
    } catch (IOException ex) {
        Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(Level.SEVERE, null, ex);
    }
        
       if(posCamera==0 && negCamera==0)
            CameraPolarity1=(float)neuCamera;
         
        else  if(posCamera>=negCamera && negCamera!=0)
            CameraPolarity1=((float)posCamera)/(negCamera+neuCamera);
        else if(posCamera>=negCamera &&  negCamera==0)
            CameraPolarity1=(float)posCamera;
        else if(posCamera<negCamera && posCamera!=0)
            CameraPolarity1= -1*(((float)negCamera)/(posCamera+neuCamera));
        else
            CameraPolarity1=-1*(float)negCamera;
        
        if(posMention==0 && negMention==0)
            MentionPolarity1=(float)neuMention;
        else if(posMention>=negMention && negMention!=0)
            MentionPolarity1=((float)posMention)/(negMention+neuMention);
        
        else if(posMention>=negMention && negMention==0)
            MentionPolarity1=(float)posMention;
        else if(posMention<negMention && posMention!=0)
            MentionPolarity1= -1*(((float)negMention)/(posMention+neuMention));
        else
            MentionPolarity1= -1*(float)negMention;
         
        if(posServiceAndSupport==0 && negServiceAndSupport==0)
            ServiceAndSupportPolarity1=(float)neuServiceAndSupport;
        else if(posServiceAndSupport>=negServiceAndSupport && negServiceAndSupport!=0)
            ServiceAndSupportPolarity1=((float)posServiceAndSupport)/(negServiceAndSupport+neuServiceAndSupport);
        else if(posServiceAndSupport>=negServiceAndSupport && negServiceAndSupport==0)
            ServiceAndSupportPolarity1=(float)posServiceAndSupport;
        else if(posServiceAndSupport<negServiceAndSupport && posServiceAndSupport!=0)
            ServiceAndSupportPolarity1=-1*(((float)negServiceAndSupport)/(posServiceAndSupport+neuServiceAndSupport));
        else
            ServiceAndSupportPolarity1=-1*(float)negServiceAndSupport;
            
        
        if(posQuest==0 && negQuest==0)
            QuestPolarity1=(float)neuQuest;
        else if(posQuest>=negQuest && negQuest!=0)
            QuestPolarity1=((float)posQuest)/(negQuest+neuQuest);
         else if(posQuest>=negQuest && negQuest==0)
             QuestPolarity1=(float)posQuest;
         else if(posQuest<negQuest && posQuest!=0)
            QuestPolarity1= -1*(((float)negQuest)/(posQuest+neuQuest));
         else
             QuestPolarity1=-1*(float)negQuest;
          
        if(posOtherFeatures==0 && negOtherFeatures==0)
            OtherFeaturesPolarity1=(float)neuOtherFeatures;
        else if(posOtherFeatures>=negOtherFeatures && negOtherFeatures !=0)
            OtherFeaturesPolarity1=((float)posOtherFeatures) /(negOtherFeatures +neuOtherFeatures );
         else if(posOtherFeatures>=negOtherFeatures && negOtherFeatures ==0)
             OtherFeaturesPolarity1=(float)posOtherFeatures;
         else if(posOtherFeatures <negOtherFeatures  && posOtherFeatures !=0)
            OtherFeaturesPolarity1= -1*(((float)negOtherFeatures )/(posOtherFeatures +neuOtherFeatures ));
         else
            OtherFeaturesPolarity1=-1*(float)negOtherFeatures ;
          
         
        if(CameraPolarity1>0)
          CameraPolarity1/=LIMIT;
        if(MentionPolarity1>0)
        MentionPolarity1/=LIMIT;
        if(ServiceAndSupportPolarity1>0)
        ServiceAndSupportPolarity1/=LIMIT;
         if(QuestPolarity1>0)
             QuestPolarity1/=LIMIT;
        if(OtherFeaturesPolarity1>0)
               OtherFeaturesPolarity1/=LIMIT;
    
    }//GEN-LAST:event_btnStreamTweetsActionPerformed

    private void lblTrendingTweetsTopic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblTrendingTweetsTopic1ActionPerformed
        // TODO add your handling code here:
                lblTrendingTweetsTopic1.setText(brand1);

    }//GEN-LAST:event_lblTrendingTweetsTopic1ActionPerformed

    private void SSNeu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNeu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNeu1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

         
     /*   CreateChart cc1=new CreateChart("MAJOR",brand1,totalpos1,totalneg1,totalneu1);
        cc1.pack();
        //cc1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        cc1.setVisible(true);
    */
        
        
        MobileResultformCompany f=new MobileResultformCompany(brand1,CameraPolarity1,ServiceAndSupportPolarity1,
        QuestPolarity1,OtherFeaturesPolarity1,MentionPolarity1,totalpos1,totalneg1,totalneu1);
        f.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MobileTweetsFormCompany.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MobileTweetsFormCompany().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ad1;
    private javax.swing.JLabel Advertisement1;
    private javax.swing.JTextField CNeg1;
    private javax.swing.JTextField CNeu1;
    private javax.swing.JTextField CPos1;
    private javax.swing.JLabel Camera1;
    private javax.swing.JLabel Features1;
    private javax.swing.JTextField INeg1;
    private javax.swing.JTextField INeu1;
    private javax.swing.JTextField IPos1;
    private javax.swing.JLabel Inquiry1;
    private javax.swing.JTextField MNeg1;
    private javax.swing.JTextField MNeu1;
    private javax.swing.JTextField MPos1;
    private javax.swing.JLabel Mention1;
    private javax.swing.JLabel Neg1;
    private javax.swing.JLabel Neu1;
    private javax.swing.JTextField OFNeg1;
    private javax.swing.JTextField OFNeu1;
    private javax.swing.JTextField OFPos1;
    private javax.swing.JLabel OtherFeatures1;
    private javax.swing.JLabel Pos1;
    private javax.swing.JTextField SSNeg1;
    private javax.swing.JTextField SSNeu1;
    private javax.swing.JTextField SSPos1;
    private javax.swing.JLabel ServiceSupport1;
    private javax.swing.JButton btnStreamTweets;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblTrendingTweets1;
    private javax.swing.JTextField lblTrendingTweetsTopic1;
    private javax.swing.JTextArea txtTrendingTweets1;
    // End of variables declaration//GEN-END:variables
}
