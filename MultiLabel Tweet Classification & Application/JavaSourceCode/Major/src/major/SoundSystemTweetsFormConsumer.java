package major; 

import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pranav Jain
 */
public class SoundSystemTweetsFormConsumer extends javax.swing.JFrame {
String brand1,brand2;
  float ServiceAndSupportPolarity1,FeaturesPolarity1,MentionPolarity1;
        float ServiceAndSupportPolarity2,FeaturesPolarity2,MentionPolarity2;

  int totalpos2=0,totalneg2=0,totalneu2=0;
    int totalpos1=0,totalneg1=0,totalneu1=0;
    int deals=0,deals2=0;
    /**
     * Creates new form Form
     */
    public SoundSystemTweetsFormConsumer(String b1,String b2) {
        brand1=b1;
        brand2=b2;
        initComponents();
        //System.out.println(brand1);
        lblTrendingTweetsTopic2.setText(brand2);
        lblTrendingTweetsTopic1.setText(brand1);
        jTextField1.setText(brand1);
        jTextField2.setText(brand2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStreamTweets = new javax.swing.JButton();
        lblTrendingTweets1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtTrendingTweets1 = new javax.swing.JTextArea();
        lblTrendingTweets2 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtTrendingTweets2 = new javax.swing.JTextArea();
        lblTrendingTweetsTopic2 = new javax.swing.JTextField();
        lblTrendingTweetsTopic1 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Pos1 = new javax.swing.JLabel();
        Neu1 = new javax.swing.JLabel();
        Neg1 = new javax.swing.JLabel();
        Mention1 = new javax.swing.JLabel();
        Features1 = new javax.swing.JLabel();
        Advertisement1 = new javax.swing.JLabel();
        MNeu1 = new javax.swing.JTextField();
        MPos1 = new javax.swing.JTextField();
        MNeg1 = new javax.swing.JTextField();
        FNeu1 = new javax.swing.JTextField();
        FNeg1 = new javax.swing.JTextField();
        FPos1 = new javax.swing.JTextField();
        Ad1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        SSPos1 = new javax.swing.JTextField();
        ServiceSupport1 = new javax.swing.JLabel();
        SSNeu1 = new javax.swing.JTextField();
        SSNeg1 = new javax.swing.JTextField();
        Pos2 = new javax.swing.JLabel();
        Neu2 = new javax.swing.JLabel();
        Neg2 = new javax.swing.JLabel();
        Mention2 = new javax.swing.JLabel();
        MPos2 = new javax.swing.JTextField();
        MNeu2 = new javax.swing.JTextField();
        MNeg2 = new javax.swing.JTextField();
        Features2 = new javax.swing.JLabel();
        Performance6 = new javax.swing.JLabel();
        SSPos2 = new javax.swing.JTextField();
        OFPos2 = new javax.swing.JTextField();
        SSNeu2 = new javax.swing.JTextField();
        OFNeu2 = new javax.swing.JTextField();
        OFNeg2 = new javax.swing.JTextField();
        SSNeg2 = new javax.swing.JTextField();
        Ad2 = new javax.swing.JTextField();
        Advertisement2 = new javax.swing.JLabel();
        Deals1 = new javax.swing.JLabel();
        DealNum1 = new javax.swing.JTextField();
        Deals2 = new javax.swing.JLabel();
        DealNum2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStreamTweets.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnStreamTweets.setText("Stream Tweets");
        btnStreamTweets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStreamTweetsActionPerformed(evt);
            }
        });

        lblTrendingTweets1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTrendingTweets1.setText("Trending Tweets:");

        txtTrendingTweets1.setEditable(false);
        txtTrendingTweets1.setColumns(20);
        txtTrendingTweets1.setRows(5);
        jScrollPane4.setViewportView(txtTrendingTweets1);

        lblTrendingTweets2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTrendingTweets2.setText("Trending Tweets:");

        txtTrendingTweets2.setEditable(false);
        txtTrendingTweets2.setColumns(20);
        txtTrendingTweets2.setRows(5);
        jScrollPane8.setViewportView(txtTrendingTweets2);

        lblTrendingTweetsTopic2.setEditable(false);
        lblTrendingTweetsTopic2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblTrendingTweetsTopic2ActionPerformed(evt);
            }
        });

        lblTrendingTweetsTopic1.setEditable(false);
        lblTrendingTweetsTopic1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblTrendingTweetsTopic1ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Vs");

        Pos1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pos1.setText("Positive");

        Neu1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neu1.setText("Neutral");

        Neg1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neg1.setText("Negative");

        Mention1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Mention1.setText("Mention");

        Features1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Features1.setText("Features");

        Advertisement1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Advertisement1.setText("Advertisements");

        MNeu1.setEditable(false);

        MPos1.setEditable(false);

        MNeg1.setEditable(false);

        FNeu1.setEditable(false);

        FNeg1.setEditable(false);

        FPos1.setEditable(false);

        Ad1.setEditable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Compare and Generate Results!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        SSPos1.setEditable(false);

        ServiceSupport1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ServiceSupport1.setText("Service and Support");

        SSNeu1.setEditable(false);
        SSNeu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNeu1ActionPerformed(evt);
            }
        });

        SSNeg1.setEditable(false);

        Pos2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Pos2.setText("Positive");

        Neu2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neu2.setText("Neutral");

        Neg2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Neg2.setText("Negative");

        Mention2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Mention2.setText("Mention");

        MPos2.setEditable(false);

        MNeu2.setEditable(false);

        MNeg2.setEditable(false);

        Features2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Features2.setText("Features");

        Performance6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Performance6.setText("Service and Support");

        SSPos2.setEditable(false);

        OFPos2.setEditable(false);

        SSNeu2.setEditable(false);
        SSNeu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNeu2ActionPerformed(evt);
            }
        });

        OFNeu2.setEditable(false);

        OFNeg2.setEditable(false);

        SSNeg2.setEditable(false);

        Ad2.setEditable(false);

        Advertisement2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Advertisement2.setText("Advertisements");

        Deals1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Deals1.setText("Deals");

        DealNum1.setEditable(false);

        Deals2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Deals2.setText("Deals");

        DealNum2.setEditable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\as\\Documents\\NetBeansProjects\\Major\\images\\bird_blue_48.png")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Vijaya", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 255));
        jLabel4.setText("Tweewomt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblTrendingTweets2)
                                .addGap(18, 18, 18)
                                .addComponent(lblTrendingTweetsTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(126, 126, 126)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Advertisement2)
                                            .addComponent(Deals2))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(ServiceSupport1)
                                                            .addComponent(Mention1)
                                                            .addComponent(Features1))
                                                        .addGap(40, 40, 40)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(SSPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(MPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(FPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(Pos1))
                                                        .addGap(56, 56, 56)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(Neu1)
                                                            .addComponent(FNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(MNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(SSNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(Performance6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(SSPos2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Mention2)
                                                                    .addComponent(Features2))
                                                                .addGap(92, 92, 92)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(Pos2)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(MPos2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(OFPos2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                        .addGap(63, 63, 63)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(OFNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(MNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(SSNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(Neu2))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(MNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(FNeg1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(SSNeg1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(Neg1)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(MNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(OFNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(SSNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Neg2, javax.swing.GroupLayout.Alignment.LEADING))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(111, 111, 111))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Deals1)
                                    .addComponent(Advertisement1))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Ad1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DealNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ad2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DealNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblTrendingTweets1)
                                .addGap(29, 29, 29)
                                .addComponent(lblTrendingTweetsTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addGap(10, 10, 10)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnStreamTweets)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStreamTweets, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTrendingTweetsTopic1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrendingTweets1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTrendingTweetsTopic2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrendingTweets2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Pos1)
                            .addComponent(Neu1)
                            .addComponent(Neg1))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Mention1))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Features1)
                                    .addComponent(FNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SSPos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SSNeu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SSNeg1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(ServiceSupport1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Deals1)
                            .addComponent(DealNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Advertisement1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Ad1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Neg2)
                            .addComponent(Neu2)
                            .addComponent(Pos2))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Features2)
                                    .addComponent(OFPos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(OFNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(OFNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(MPos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Mention2)
                                .addComponent(MNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Performance6)
                            .addComponent(SSPos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SSNeu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SSNeg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Deals2)
                            .addComponent(DealNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Advertisement2)
                            .addComponent(Ad2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStreamTweetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStreamTweetsActionPerformed
        // TODO add your handling code here:
    SoundSystemSentimentClassifier sentClassifier;  
    SoundSystemTopicClassifier sentClassifier2; 
    int LIMIT= 500; //the number of retrieved tweets  
    ConfigurationBuilder cb;  
    Twitter twitter;   
        cb = new ConfigurationBuilder();  
        cb.setDebugEnabled(true);
        cb.setOAuthConsumerKey("r3LjcqZLjEkgtniB3MJ2G4wZe");
        cb.setOAuthConsumerSecret("GfQjdjQQQHFA4iWq0pdUCm5279EuZ0aUSLmirjbs7fqTyxsLv8");
        cb.setOAuthAccessToken("3557951474-axOpcM4CeRZqfGYmP7elNE7nZ52rSUHI5Rv6mve");
        cb.setOAuthAccessTokenSecret("N1lBfeKZq78pOTToXxh9EwSGvP92bPGLJRrFAwSvdApXo");  
    twitter = new TwitterFactory(cb.build()).getInstance();  
    sentClassifier = new SoundSystemSentimentClassifier();    
    sentClassifier2 = new SoundSystemTopicClassifier();    
 
      FileOutputStream fout1=null;  
    try {
        fout1 = new FileOutputStream("DatasetConsumer\\SoundSystem"+brand1+".txt");
    } catch (FileNotFoundException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout=new BufferedOutputStream(fout1);  
   
     
    int count=0;
    //int compliments=0,complaints=0,
    int advertisement=0;
    int posFeatures=0,negFeatures=0,neuFeatures=0;
    int posMention=0,negMention=0,neuMention=0;
    int posServiceAndSupport=0,negServiceAndSupport=0,neuServiceAndSupport=0;
    
       Query query = new Query(brand1);  
       query.setCount(100); 
       query.setLang("en");
       QueryResult r = null;
       do {
            
        try {
            r = twitter.search(query); //Returns tweets that match a specified query.
            ArrayList ts= (ArrayList) r.getTweets();
            
            for (int i = 0; i < ts.size() && count != LIMIT; i++) {
                
                Status t = (Status) ts.get(i);
                String text = t.getText();
                if(text.toLowerCase().contains("bid") || text.toLowerCase().contains("win") || text.toLowerCase().contains("free") || text.toLowerCase().contains("giveaway"))
                {
                     if(advertisement>1500)
                        continue;
                    String name = t.getUser().getScreenName();
                    txtTrendingTweets1.append(name + " : " + text + "\n" + "Sentiment: Neutral \n Topic: Advertisement");
                    txtTrendingTweets1.append("\n-----------------------------------------------------------------------------------\n");
                    advertisement++;
                    String s= name + " : " + text + "\n Sentiment: Neutral \n Topic: Advertisement \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    continue;
                }
                 if(text.toLowerCase().contains("deal") || text.toLowerCase().contains("offer") || text.toLowerCase().contains("deals") || text.toLowerCase().contains("offers"))
                     
                {
                    String name = t.getUser().getScreenName();
                    txtTrendingTweets1.append(name + " : " + text + "\n" + "Sentiment: Neutral \n Topic: Deals");
                    txtTrendingTweets1.append("\n-----------------------------------------------------------------------------------\n");
                    deals++;
                    String s= name + " : " + text + "\n Sentiment: Neutral \n Topic: Deals \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    continue;
                }
                count++;
                //System.out.println("Text: " + text);
                String name = t.getUser().getScreenName();
                //System.out.println("User: " + name);
                String sent = sentClassifier.classify(t.getText());
                String topic = sentClassifier2.classify(t.getText());
                //System.out.println("Sentiment: " + sent);
                
                txtTrendingTweets1.append(name + " : " + text + "\n" + "Sentiment:" + sent + "\nTopic:" + topic);
                txtTrendingTweets1.append("\n-----------------------------------------------------------------------------------\n");
                
                String s= name + " : " + text + "\n Sentiment:" + sent + "\nTopic:" + topic + " \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                if(sent.equals("Positive") && topic.equals("Mention"))
                    posMention++;
                if(sent.equals("Negative") && topic.equals("Mention"))
                    negMention++;
                if(sent.equals("Neutral") && topic.equals("Mention"))
                    neuMention++;
           
                
                if(sent.equals("Positive") && topic.equals("ServiceAndSupport"))
                    posServiceAndSupport++;
                if(sent.equals("Negative") && topic.equals("ServiceAndSupport"))
                    negServiceAndSupport++;
                if(sent.equals("Neutral") && topic.equals("ServiceAndSupport"))
                    neuServiceAndSupport++;
                
                  if(sent.equals("Positive") && topic.equals("Features"))
                    posFeatures++;
                if(sent.equals("Negative") && topic.equals("Features"))
                    negFeatures++;
                if(sent.equals("Neutral") && topic.equals("Features"))
                    neuFeatures++;
                
               
                
            }
        } catch (TwitterException ex) {
            Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
        }
       } while (count != LIMIT);  
       //nextQuery():Returns a Query instance to fetch next page or null if there is no next page.
   try {
        bout.close();
    } catch (IOException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
    System.out.println("Count: " + count);  
       
        MPos1.setText("=" + posMention);
        MNeg1.setText("=" + negMention);
        MNeu1.setText("=" + neuMention);
        
        
        SSPos1.setText("=" + posServiceAndSupport);
        SSNeg1.setText("=" + negServiceAndSupport);
        SSNeu1.setText("=" + neuServiceAndSupport);
        
        FPos1.setText("=" + posFeatures);
        FNeg1.setText("=" + negFeatures);
        FNeu1.setText("=" + neuFeatures);
      
        Ad1.setText("=" + advertisement);
        DealNum1.setText("=" + deals);
        
        totalpos1=posServiceAndSupport + posFeatures + posMention;
        totalneg1=negServiceAndSupport + negFeatures + negMention;
        totalneu1=neuServiceAndSupport + neuFeatures + neuMention;
        
      System.out.println("Positive1=" + totalpos1);
        System.out.println("Negative1=" + totalneg1);
        System.out.println("Neutral1=" + totalneu1);
             FileOutputStream fout3=null;  
    
        try {
        fout3 = new FileOutputStream("DatasetConsumer\\SoundSystem"+brand1+"Sentiments.txt");
    } catch (FileNotFoundException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout3=new BufferedOutputStream(fout3);  
   
    String sT= " Positive: " + totalpos1 + " \n Negative: " + totalneg1 + " \n Neutral: " + totalneu1;
    byte bT[]=sT.getBytes(); 
    try {
        bout3.write(bT);
        bout3.close();
    } catch (IOException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
        if(posMention==0 && negMention==0)
            MentionPolarity1=(float)neuMention;
        else if(posMention>=negMention && negMention!=0)
            MentionPolarity1=((float)posMention)/(negMention+neuMention);
        
        else if(posMention>=negMention && negMention==0)
            MentionPolarity1=(float)posMention;
        else if(posMention<negMention && posMention!=0)
            MentionPolarity1= -1*(((float)negMention)/(posMention+neuMention));
        else
            MentionPolarity1= -1*(float)negMention;
         
        if(posServiceAndSupport==0 && negServiceAndSupport==0)
            ServiceAndSupportPolarity1=(float)neuServiceAndSupport;
        else if(posServiceAndSupport>=negServiceAndSupport && negServiceAndSupport!=0)
            ServiceAndSupportPolarity1=((float)posServiceAndSupport)/(negServiceAndSupport+neuServiceAndSupport);
        else if(posServiceAndSupport>=negServiceAndSupport && negServiceAndSupport==0)
            ServiceAndSupportPolarity1=(float)posServiceAndSupport;
        else if(posServiceAndSupport<negServiceAndSupport && posServiceAndSupport!=0)
            ServiceAndSupportPolarity1=-1*(((float)negServiceAndSupport)/(posServiceAndSupport+neuServiceAndSupport));
        else
            ServiceAndSupportPolarity1=-1*(float)negServiceAndSupport;
            
      
        if(posFeatures==0 && negFeatures==0)
            FeaturesPolarity1=(float)neuFeatures;
        else if(posFeatures>=negFeatures && negFeatures !=0)
            FeaturesPolarity1=((float)posFeatures) /(negFeatures +neuFeatures );
         else if(posFeatures>=negFeatures && negFeatures ==0)
             FeaturesPolarity1=(float)posFeatures;
         else if(posFeatures <negFeatures  && posFeatures !=0)
            FeaturesPolarity1= -1*(((float)negFeatures )/(posFeatures +neuFeatures ));
         else
            FeaturesPolarity1=-1*(float)negFeatures ;
         
        if(MentionPolarity1>0)
        MentionPolarity1/=LIMIT;
        if(ServiceAndSupportPolarity1>0)
        ServiceAndSupportPolarity1/=LIMIT;
 
        if(FeaturesPolarity1>0)
               FeaturesPolarity1/=LIMIT;
    
        
        FileOutputStream fout2=null;  
    try {
        fout2 = new FileOutputStream("DatasetConsumer\\SoundSystem"+brand2+".txt");
                
    } catch (FileNotFoundException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout2=new BufferedOutputStream(fout2);  
         
       int count2=0;
    //int compliments=0,complaints=0,
    int advertisement2=0;
    int posFeatures2=0,negFeatures2=0,neuFeatures2=0;
    int posMention2=0,negMention2=0,neuMention2=0;
    int posServiceAndSupport2=0,negServiceAndSupport2=0,neuServiceAndSupport2=0;
   
       Query query2 = new Query(brand2);
       query2.setCount(100); 
       query2.setLang("en");
       QueryResult r2 = null;
       do {
            
        try {
            r2 = twitter.search(query2); //Returns tweets that match a specified query.
            ArrayList ts2= (ArrayList) r2.getTweets();
            
            for (int i = 0; i < ts2.size() && count2 != LIMIT; i++) {
                
                Status t2 = (Status) ts2.get(i);
                String text2 = t2.getText();
                if( text2.toLowerCase().contains("bid") ||text2.toLowerCase().contains("win") || text2.toLowerCase().contains("giveaway") || text2.toLowerCase().contains("free"))
                {
                    if(advertisement2>1500)
                        continue;
                    String name2 = t2.getUser().getScreenName();
                    txtTrendingTweets2.append(name2 + " : " + text2 + "\n" + "Sentiment: Neutral \n Topic: Advertisement");
                    txtTrendingTweets2.append("\n-----------------------------------------------------------------------------------\n");
                    advertisement2++;
                    
                       String s= name2 + " : " + text2 + "\n Sentiment: Neutral \n Topic: Advertisement \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout2.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    continue;
                }
                if(text2.toLowerCase().contains("deal") || text2.toLowerCase().contains("offer") || text2.toLowerCase().contains("deals") || text2.toLowerCase().contains("offers"))
                {
                    String name2 = t2.getUser().getScreenName();
                    txtTrendingTweets2.append(name2 + " : " + text2 + "\n" + "Sentiment: Neutral \n Topic: Deals");
                    txtTrendingTweets2.append("\n-----------------------------------------------------------------------------------\n");
                    deals2++;
                    
                    String s= name2 + " : " + text2 + "\n" + "Sentiment: Neutral \n Topic: Deals \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout2.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    continue;
                }
                count2++;
                //System.out.println("Text: " + text);
                String name2 = t2.getUser().getScreenName();
                //System.out.println("User: " + name);
                String sent2 = sentClassifier.classify(t2.getText());
                String topic2 = sentClassifier2.classify(t2.getText());
                //System.out.println("Sentiment: " + sent);
                
                txtTrendingTweets2.append(name2 + " : " + text2 + "\n" + "Sentiment:" + sent2 + "\nTopic:" + topic2);
                txtTrendingTweets2.append("\n-----------------------------------------------------------------------------------\n");
                
                 String s= name2 + " : " + text2 + "\n Sentiment:" + sent2 + "\nTopic:" + topic2 + " \n-----------------------------------------------------------------------------------\n\n";
                    byte b[]=s.getBytes(); 
                    try {
                        bout2.write(b);
                    } catch (IOException ex) {
                        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                if(sent2.equals("Positive") && topic2.equals("Mention"))
                    posMention2++;
                if(sent2.equals("Negative") && topic2.equals("Mention"))
                    negMention2++;
                if(sent2.equals("Neutral") && topic2.equals("Mention"))
                    neuMention2++;
                
                
                
                if(sent2.equals("Positive") && topic2.equals("ServiceAndSupport"))
                    posServiceAndSupport2++;
                if(sent2.equals("Negative") && topic2.equals("ServiceAndSupport"))
                    negServiceAndSupport2++;
                if(sent2.equals("Neutral") && topic2.equals("ServiceAndSupport"))
                    neuServiceAndSupport2++;
                
                  if(sent2.equals("Positive") && topic2.equals("Features"))
                    posFeatures2++;
                if(sent2.equals("Negative") && topic2.equals("Features"))
                    negFeatures2++;
                if(sent2.equals("Neutral") && topic2.equals("Features"))
                    neuFeatures2++;
                
              
                
            }
        } catch (TwitterException ex) {
            Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
        }
       } while (count2 != LIMIT);  
       //nextQuery():Returns a Query instance to fetch next page or null if there is no next page.
   try {
        bout2.close();
    } catch (IOException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
    System.out.println("Count: " + count2);  
       
        MPos2.setText("=" + posMention2);
        MNeg2.setText("=" + negMention2);
        MNeu2.setText("=" + neuMention2);
        
        
        SSPos2.setText("=" + posServiceAndSupport2);
        SSNeg2.setText("=" + negServiceAndSupport2);
        SSNeu2.setText("=" + neuServiceAndSupport2);
        
        OFPos2.setText("=" + posFeatures2);
        OFNeg2.setText("=" + negFeatures2);
        OFNeu2.setText("=" + neuFeatures2);
        
        
        
        Ad2.setText("=" + advertisement2);
        DealNum2.setText("=" + deals2);
        totalpos2=posServiceAndSupport2 + posFeatures2 + posMention2;
        totalneg2=negServiceAndSupport2 + negFeatures2 + negMention2;
        totalneu2=neuServiceAndSupport2 + neuFeatures2 + neuMention2;
        
       System.out.println("Positive2=" + totalpos2);
        System.out.println("Negative2=" + totalneg2);
        System.out.println("Neutral2=" + totalneu2);
      FileOutputStream fout4=null;  
    
        try {
        fout4 = new FileOutputStream("DatasetConsumer\\SoundSystem"+brand2+"Sentiments.txt");
    } catch (FileNotFoundException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
   BufferedOutputStream bout4=new BufferedOutputStream(fout4);  
   
    String s2= " Positive: " + totalpos2 + " \n Negative: " + totalneg2 + " \n Neutral: " + totalneu2;
    byte b2[]=s2.getBytes(); 
    try {
        bout4.write(b2);
        bout4.close();
    } catch (IOException ex) {
        Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(Level.SEVERE, null, ex);
    }
        
     
        if(posMention2==0 && negMention2==0)
            MentionPolarity2=(float)neuMention2;
        else if(posMention2>=negMention2 && negMention2!=0)
            MentionPolarity2=((float)posMention2)/(negMention2+neuMention2);
        else if(posMention2>=negMention2 &&  negMention2==0)
            MentionPolarity2=(float)posMention2;
        else if(posMention2<negMention2 && posMention2!=0)
            MentionPolarity2= -1*(((float)negMention2)/(posMention2+neuMention2));
        else
            MentionPolarity2= -1*(float)negMention2;
         
        if(posServiceAndSupport2==0 && negServiceAndSupport2==0)
            ServiceAndSupportPolarity2=(float)neuServiceAndSupport2;
        else if(posServiceAndSupport2>=negServiceAndSupport2 && negServiceAndSupport2!=0)
            ServiceAndSupportPolarity2=((float)posServiceAndSupport2)/(negServiceAndSupport2+neuServiceAndSupport2);
        else if(posServiceAndSupport2>=negServiceAndSupport2 && negServiceAndSupport2==0)
            ServiceAndSupportPolarity2=(float)posServiceAndSupport2;
        else if(posServiceAndSupport2<negServiceAndSupport2 && posServiceAndSupport2!=0)
            ServiceAndSupportPolarity2=-1*(((float)negServiceAndSupport2)/(posServiceAndSupport2+neuServiceAndSupport2));
        
        else
            ServiceAndSupportPolarity2=-1*(float)negServiceAndSupport2;
            
        
     
        if(posFeatures2==0 && negFeatures2==0)
            FeaturesPolarity2=(float)neuFeatures2;
        else if(posFeatures2>=negFeatures2 && negFeatures2 !=0)
            FeaturesPolarity2=((float)posFeatures2) /(negFeatures2 +neuFeatures2 );
         else if(posFeatures2>=negFeatures2 && negFeatures2 ==0)
             FeaturesPolarity2=(float)posFeatures2;
         else if(posFeatures2 <negFeatures2  && posFeatures2 !=0)
            FeaturesPolarity2= -1*(((float)negFeatures2 )/(posFeatures2 +neuFeatures2 ));
         else
            FeaturesPolarity2=-1*(float)negFeatures2 ;
         
        /* CameraPolarity2/=posCamera2+negCamera2+neuCamera2;
         MentionPolarity2/=posMention2+negMention2+neuMention2;
         ServiceAndSupportPolarity2/=posServiceAndSupport2+negServiceAndSupport2+neuServiceAndSupport2;
         QuestPolarity2/=posQuest2+negQuest2+neuQuest2;
         OtherFeaturesPolarity2/=posOtherFeatures2+negOtherFeatures2+neuOtherFeatures2;
        */
        
   
        if(MentionPolarity2>0)
        MentionPolarity2/=LIMIT;
        if(ServiceAndSupportPolarity2>0)
        ServiceAndSupportPolarity2/=LIMIT;
     
        if(FeaturesPolarity2>0)
               FeaturesPolarity2/=LIMIT;
    
         
   
    
    }//GEN-LAST:event_btnStreamTweetsActionPerformed

    private void lblTrendingTweetsTopic2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblTrendingTweetsTopic2ActionPerformed
        // TODO add your handling code here:
        lblTrendingTweetsTopic2.setText(brand2);
    }//GEN-LAST:event_lblTrendingTweetsTopic2ActionPerformed

    private void lblTrendingTweetsTopic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblTrendingTweetsTopic1ActionPerformed
        // TODO add your handling code here:
                lblTrendingTweetsTopic1.setText(brand1);

    }//GEN-LAST:event_lblTrendingTweetsTopic1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
        jTextField1.setText(brand1);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
          jTextField2.setText(brand2);
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void SSNeu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNeu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNeu1ActionPerformed

    private void SSNeu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNeu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNeu2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        SoundSystemResultformConsumer f=new SoundSystemResultformConsumer(brand1,brand2,ServiceAndSupportPolarity1,FeaturesPolarity1,MentionPolarity1,
       ServiceAndSupportPolarity2,FeaturesPolarity2,MentionPolarity2,deals,deals2);
        f.setVisible(true);
        
        
        CreateChart cc1=new CreateChart("MAJOR",brand1,totalpos1,totalneg1,totalneu1);
        cc1.pack();
        cc1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        cc1.setVisible(true);
        
        CreateChart cc2=new CreateChart("MAJOR",brand2,totalpos2,totalneg2,totalneu2);
        cc2.pack();
        cc2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        cc2.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SoundSystemTweetsFormConsumer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new SoundSystemTweetsFormConsumer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ad1;
    private javax.swing.JTextField Ad2;
    private javax.swing.JLabel Advertisement1;
    private javax.swing.JLabel Advertisement2;
    private javax.swing.JTextField DealNum1;
    private javax.swing.JTextField DealNum2;
    private javax.swing.JLabel Deals1;
    private javax.swing.JLabel Deals2;
    private javax.swing.JTextField FNeg1;
    private javax.swing.JTextField FNeu1;
    private javax.swing.JTextField FPos1;
    private javax.swing.JLabel Features1;
    private javax.swing.JLabel Features2;
    private javax.swing.JTextField MNeg1;
    private javax.swing.JTextField MNeg2;
    private javax.swing.JTextField MNeu1;
    private javax.swing.JTextField MNeu2;
    private javax.swing.JTextField MPos1;
    private javax.swing.JTextField MPos2;
    private javax.swing.JLabel Mention1;
    private javax.swing.JLabel Mention2;
    private javax.swing.JLabel Neg1;
    private javax.swing.JLabel Neg2;
    private javax.swing.JLabel Neu1;
    private javax.swing.JLabel Neu2;
    private javax.swing.JTextField OFNeg2;
    private javax.swing.JTextField OFNeu2;
    private javax.swing.JTextField OFPos2;
    private javax.swing.JLabel Performance6;
    private javax.swing.JLabel Pos1;
    private javax.swing.JLabel Pos2;
    private javax.swing.JTextField SSNeg1;
    private javax.swing.JTextField SSNeg2;
    private javax.swing.JTextField SSNeu1;
    private javax.swing.JTextField SSNeu2;
    private javax.swing.JTextField SSPos1;
    private javax.swing.JTextField SSPos2;
    private javax.swing.JLabel ServiceSupport1;
    private javax.swing.JButton btnStreamTweets;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblTrendingTweets1;
    private javax.swing.JLabel lblTrendingTweets2;
    private javax.swing.JTextField lblTrendingTweetsTopic1;
    private javax.swing.JTextField lblTrendingTweetsTopic2;
    private javax.swing.JTextArea txtTrendingTweets1;
    private javax.swing.JTextArea txtTrendingTweets2;
    // End of variables declaration//GEN-END:variables
}
